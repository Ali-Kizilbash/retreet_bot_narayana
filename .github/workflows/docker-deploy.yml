name: CI/CD Pipeline

on:
  push:
    branches:
      - new-feature  # Ваши ветки для пуша
  workflow_dispatch:  # Добавлено для ручного запуска

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: atillaaa/retreet_bot_narayana:new-feature  # Замените на ваш Docker Hub репозиторий

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production  # Вы можете изменить на ваше окружение

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start SSH agent and add key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_DEPLOY }}  # Убедитесь, что секрет называется SSH_KEY

      # Проверка содержимого SSH-агента
      - name: List SSH identities
        run: |
          echo "Список SSH идентификаторов в агенте:"
          ssh-add -l

      # Дополнительная проверка наличия ключа
      - name: Verify SSH key is added
        run: |
          if ssh-add -l | grep -q "local_bot_key_ali"; then
            echo "SSH ключ успешно добавлен."
          else
            echo "Ошибка: SSH ключ не был добавлен."
            exit 1
          fi

      # Отладочный шаг для SSH подключения
      - name: Debug SSH connection
        run: |
          ssh -vvv -o StrictHostKeyChecking=no root@92.255.78.196 "echo 'Debug SSH connection'"

      # Проверка подключения к серверу
      - name: Test SSH connection to server
        run: |
          echo "Проверка SSH подключения к серверу..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "echo 'SSH connection works!'"

      # Проверка доступности GitHub из сервера
      - name: Test GitHub SSH access from server
        run: |
          echo "Проверка SSH доступа к GitHub с сервера..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "ssh -T git@github.com" || echo "Не удалось подключиться к GitHub через SSH."

      # Проверка существования директории проекта
      - name: Check if project directory exists on server
        run: |
          echo "Проверка существования директории проекта на сервере..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "if [ -d /home/root/project_root ]; then echo 'Directory exists'; else echo 'Directory does not exist'; fi"

      # Клонирование репозитория, если директория не является Git-репозиторием
      - name: Clone repository if not exists
        run: |
          echo "Проверка и клонирование репозитория, если необходимо..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "
            if [ ! -d /home/root/project_root/.git ]; then
              echo 'Клонирование репозитория...'
              git clone git@github.com:Ali-Kizilbash/retreet_bot_narayana.git /home/root/project_root
            else
              echo 'Репозиторий уже клонирован.'
            fi
          "

      # Проверка содержимого директории проекта
      - name: List files in project directory on server
        run: |
          echo "Список файлов в директории проекта на сервере:"
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "ls -la /home/root/project_root"

      # Логгирование вывода команды `git pull`
      - name: Pull changes from GitHub on server
        run: |
          echo "Выполнение git pull на сервере..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "cd /home/root/project_root && git pull origin new-feature"

      # Проверка текущего состояния Docker на сервере
      - name: Check Docker status on server
        run: |
          echo "Проверка состояния Docker на сервере..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "docker ps -a"

      # Перезапуск контейнеров с Docker Compose и вывод логов
      - name: Restart Docker containers with Docker Compose
        run: |
          echo "Перезапуск контейнеров с Docker Compose..."
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "
            cd /home/root/project_root &&
            docker-compose down &&
            docker-compose up -d &&
            docker-compose logs
          "

      # Дополнительные отладочные шаги (опционально)
      - name: Verify Deployment
        run: |
          echo "Проверка работы бота после деплоя..."
          # Здесь вы можете добавить команды для проверки статуса бота, например:
          # curl -f http://your-bot-domain/health || exit 1
          # Или любые другие проверки, специфичные для вашего бота
          echo "Проверка завершена."
