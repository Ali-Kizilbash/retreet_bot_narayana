name: CI/CD Pipeline

on:
  push:
    branches:
      - new-feature  # Ваши ветки для пуша
  workflow_dispatch:  # Добавлено для ручного запуска

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: atillaaa/retreet_bot_narayana:new-feature  # Замените на ваш Docker Hub репозиторий

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production  # Вы можете изменить на ваше окружение

    steps:
      - name: Start SSH agent and add deploy key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_DEPLOY }}

      - name: List SSH identities
        run: |
          echo "Список SSH идентификаторов в агенте:"
          ssh-add -l

      - name: Verify SSH key is added
        run: |
          if ssh-add -l | grep -q "local_bot_key_ali"; then
            echo "SSH ключ успешно добавлен."
          else
            echo "Ошибка: SSH ключ не был добавлен."
            exit 1
          fi

      - name: Debug SSH connection
        run: |
          ssh -vvv -o StrictHostKeyChecking=no root@92.255.78.196 "echo 'Debug SSH connection'"

      - name: Test SSH connection to server
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "echo 'SSH connection works!'"

      - name: Add GitHub SSH key to server and configure SSH
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 << EOF
mkdir -p ~/.ssh
echo "${{ secrets.GITHUB_SSH_KEY }}" > ~/.ssh/id_rsa_github
chmod 600 ~/.ssh/id_rsa_github
ssh-keyscan github.com >> ~/.ssh/known_hosts
cat << 'CONFIG_EOF' > ~/.ssh/config
Host github.com
  HostName github.com
  User git
  IdentityFile ~/.ssh/id_rsa_github
  IdentitiesOnly yes
CONFIG_EOF
chmod 600 ~/.ssh/config
ls -la ~/.ssh/id_rsa_github ~/.ssh/config
ssh -T git@github.com || echo "Проверка подключения к GitHub не удалась."
EOF

      - name: Test GitHub SSH access after adding key
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "ssh -T git@github.com" || { echo "Не удалось подключиться к GitHub через SSH после добавления ключа."; exit 1; }

      - name: Clone repository if not exists
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "
            if [ ! -d /home/root/project_root/.git ]; then
              git clone git@github.com:Ali-Kizilbash/retreet_bot_narayana.git /home/root/project_root
            fi
          "

      - name: List files in project directory on server
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "ls -la /home/root/project_root"

      - name: Pull changes from GitHub on server
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "cd /home/root/project_root && git pull origin new-feature"

      - name: Check Docker status on server
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "docker ps -a"

      - name: Restart Docker containers with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no root@92.255.78.196 "
            cd /home/root/project_root &&
            docker-compose down &&
            docker-compose up -d &&
            docker-compose logs
          "

      - name: Verify Deployment
        run: |
          echo "Проверка работы бота после деплоя..."
          echo "Проверка завершена."
